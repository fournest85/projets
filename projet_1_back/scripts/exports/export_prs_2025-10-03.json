[
  {
    "_id": "68dfd51b5b492148af804c13",
    "number": 13,
    "created_at": "2025-10-03T13:46:29.000Z",
    "date": "2025-10-09T12:39:21.224Z",
    "files": [
      {
        "filename": "controller/pr.js",
        "status": "modified",
        "additions": 45,
        "deletions": 45,
        "changes": 90,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/52bd0f70b97950442e334aa3eedf6709af8befb5/controller%2Fpr.js",
        "modifiedLines": [
          {
            "line": 6,
            "type": "added",
            "content": "const { updatePRsWithUser } = require('../utils/update');"
          },
          {
            "line": null,
            "type": "removed",
            "content": "// async function analyzePRFiles(prNumber, baseCommitSha) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//     const files = await fetchFilesForPR(prNumber);"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "//     for (const file of files) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//         if (file.status === 'modified') {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//             try {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                 const newContentResponse = await axios.get(file.raw_url, {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                     headers: {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                         Authorization: `Bearer ${GITHUB_TOKEN}`,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                         Accept: 'application/vnd.github.v3.raw'"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                     }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                 });"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                 const newText = newContentResponse.data;"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                 const oldText = await getFileAtCommit("
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                     GITHUB_OWNER,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                     GITHUB_REPO,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                     file.filename,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                     baseCommitSha,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                     GITHUB_TOKEN"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                 );"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                 showDiff(oldText, newText, file.filename);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//             } catch (err) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//                 console.error(`❌ Erreur sur ${file.filename} :`, err.message);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//             }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//         }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//     }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "// }"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "                        .filter(part => part.added || part.removed) "
          },
          {
            "line": 126,
            "type": "added",
            "content": "                        .filter(part => part.added || part.removed)"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            user: pr.user,"
          },
          {
            "line": 141,
            "type": "added",
            "content": "            user: {"
          },
          {
            "line": 142,
            "type": "added",
            "content": "                name: pr.user.name,"
          },
          {
            "line": 143,
            "type": "added",
            "content": "                email: pr.user.email,"
          },
          {
            "line": 144,
            "type": "added",
            "content": "                phone: pr.user.phone,"
          },
          {
            "line": 145,
            "type": "added",
            "content": "                githubId: pr.user.id,"
          },
          {
            "line": 146,
            "type": "added",
            "content": "                githubUrl: pr.user.html_url"
          },
          {
            "line": 147,
            "type": "added",
            "content": "            },"
          },
          {
            "line": 148,
            "type": "added",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": 248,
            "type": "added",
            "content": ""
          },
          {
            "line": 249,
            "type": "added",
            "content": "                const userFromDB = await usersCollection.findOne({ githubId: pr.user.id });"
          },
          {
            "line": 250,
            "type": "added",
            "content": "                const enrichedUser = {"
          },
          {
            "line": 251,
            "type": "added",
            "content": "                    name: userFromDB?.name || '',"
          },
          {
            "line": 252,
            "type": "added",
            "content": "                    email: userFromDB?.email || '',"
          },
          {
            "line": 253,
            "type": "added",
            "content": "                    phone: userFromDB?.phone || '',"
          },
          {
            "line": 254,
            "type": "added",
            "content": "                    githubId: pr.user.id,"
          },
          {
            "line": 255,
            "type": "added",
            "content": "                    githubUrl: pr.user.html_url"
          },
          {
            "line": 256,
            "type": "added",
            "content": "                };"
          },
          {
            "line": 257,
            "type": "added",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    user: pr.user"
          },
          {
            "line": 264,
            "type": "added",
            "content": "                    user: enrichedUser"
          },
          {
            "line": 278,
            "type": "added",
            "content": "        const usersCollection = dbUser.bd().collection('users');"
          },
          {
            "line": 322,
            "type": "added",
            "content": ""
          },
          {
            "line": 323,
            "type": "added",
            "content": "            const userFromDB = await usersCollection.findOne({ githubId: pr.user.id });"
          },
          {
            "line": 324,
            "type": "added",
            "content": "            const enrichedUser = {"
          },
          {
            "line": 325,
            "type": "added",
            "content": "                name: userFromDB?.name || '',"
          },
          {
            "line": 326,
            "type": "added",
            "content": "                email: userFromDB?.email || '',"
          },
          {
            "line": 327,
            "type": "added",
            "content": "                phone: userFromDB?.phone || '',"
          },
          {
            "line": 328,
            "type": "added",
            "content": "                githubId: pr.user.id,"
          },
          {
            "line": 329,
            "type": "added",
            "content": "                githubUrl: pr.user.html_url"
          },
          {
            "line": 330,
            "type": "added",
            "content": "            };"
          },
          {
            "line": 331,
            "type": "added",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "                        user: pr.user,"
          },
          {
            "line": 338,
            "type": "added",
            "content": "                        user: enrichedUser,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "// async function enrichPRsManuellement() {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//     try {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//         const modifiedPRs = await fetchModifiedPRsFromYesterday();"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//         await showDiffsForModifiedPRsFromYesterday(modifiedPRs);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//         console.log('✅ Enrichissement manuel terminé');"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//     } catch (err) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//         console.error(\"❌ Erreur lors de l’enrichissement manuel :\", err);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "//     }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "// }"
          },
          {
            "line": 378,
            "type": "added",
            "content": "const updatePRs = async (req, res) => {"
          },
          {
            "line": 379,
            "type": "added",
            "content": "    try {"
          },
          {
            "line": 380,
            "type": "added",
            "content": "        const count = await updatePRsWithUser();"
          },
          {
            "line": 381,
            "type": "added",
            "content": "        res.status(200).json({ message: `${count} PR(s) mises à jour avec les données utilisateur.` });"
          },
          {
            "line": 382,
            "type": "added",
            "content": "    } catch (error) {"
          },
          {
            "line": 383,
            "type": "added",
            "content": "        console.error('❌ Erreur updatePRs :', error.message);"
          },
          {
            "line": 384,
            "type": "added",
            "content": "        res.status(500).json({ error: 'Erreur lors de la mise à jour des PRs.' });"
          },
          {
            "line": 385,
            "type": "added",
            "content": "    }"
          },
          {
            "line": 386,
            "type": "added",
            "content": "};"
          },
          {
            "line": 387,
            "type": "added",
            "content": ""
          },
          {
            "line": 388,
            "type": "added",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "module.exports = { fetchAndStorePRs, getPRs, fetchAndStorePRsRaw, fetchModifiedPRsFromYesterday, showDiffsForModifiedPRsFromYesterday, fetchModifiedPRsFromYesterdayFromDB, enrichPRsManuellement };"
          },
          {
            "line": 391,
            "type": "added",
            "content": "module.exports = { fetchAndStorePRs, getPRs, fetchAndStorePRsRaw, fetchModifiedPRsFromYesterday, showDiffsForModifiedPRsFromYesterday, fetchModifiedPRsFromYesterdayFromDB, updatePRs };"
          }
        ],
        "diff": []
      },
      {
        "filename": "controller/user.js",
        "status": "modified",
        "additions": 108,
        "deletions": 4,
        "changes": 112,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/52bd0f70b97950442e334aa3eedf6709af8befb5/controller%2Fuser.js",
        "modifiedLines": [
          {
            "line": null,
            "type": "removed",
            "content": "        // 🔍 Projection pour n'afficher que les champs utiles"
          },
          {
            "line": null,
            "type": "removed",
            "content": "        const users = await collection.find({}, {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            projection: { id: 1, login: 1, html_url: 1, _id: 0 }"
          },
          {
            "line": 47,
            "type": "added",
            "content": "        // Projection complète pour les deux types d'utilisateurs"
          },
          {
            "line": 48,
            "type": "added",
            "content": "        const rawUsers = await collection.find({}, {"
          },
          {
            "line": 49,
            "type": "added",
            "content": "            projection: {"
          },
          {
            "line": 50,
            "type": "added",
            "content": "                name: 1,"
          },
          {
            "line": 51,
            "type": "added",
            "content": "                email: 1,"
          },
          {
            "line": 52,
            "type": "added",
            "content": "                phone: 1,"
          },
          {
            "line": 53,
            "type": "added",
            "content": "                id: 1,"
          },
          {
            "line": 54,
            "type": "added",
            "content": "                login: 1,"
          },
          {
            "line": 55,
            "type": "added",
            "content": "                html_url: 1,"
          },
          {
            "line": 56,
            "type": "added",
            "content": "                _id: 1"
          },
          {
            "line": 57,
            "type": "added",
            "content": "            }"
          },
          {
            "line": 62,
            "type": "added",
            "content": "        // Optionnel : transformation pour le frontend"
          },
          {
            "line": 63,
            "type": "added",
            "content": "        const users = rawUsers.map(user => {"
          },
          {
            "line": 64,
            "type": "added",
            "content": "            if (user.login) {"
          },
          {
            "line": 65,
            "type": "added",
            "content": "                return {"
          },
          {
            "line": 66,
            "type": "added",
            "content": "                    type: 'github',"
          },
          {
            "line": 67,
            "type": "added",
            "content": "                    id: user.id,"
          },
          {
            "line": 68,
            "type": "added",
            "content": "                    login: user.login,"
          },
          {
            "line": 69,
            "type": "added",
            "content": "                    html_url: user.html_url"
          },
          {
            "line": 70,
            "type": "added",
            "content": "                };"
          },
          {
            "line": 71,
            "type": "added",
            "content": "            } else {"
          },
          {
            "line": 72,
            "type": "added",
            "content": "                return {"
          },
          {
            "line": 73,
            "type": "added",
            "content": "                    type: 'local',"
          },
          {
            "line": 74,
            "type": "added",
            "content": "                    _id: user._id,"
          },
          {
            "line": 75,
            "type": "added",
            "content": "                    name: user.name,"
          },
          {
            "line": 76,
            "type": "added",
            "content": "                    email: user.email,"
          },
          {
            "line": 77,
            "type": "added",
            "content": "                    phone: user.phone"
          },
          {
            "line": 78,
            "type": "added",
            "content": "                };"
          },
          {
            "line": 79,
            "type": "added",
            "content": "            }"
          },
          {
            "line": 80,
            "type": "added",
            "content": "        });"
          },
          {
            "line": 81,
            "type": "added",
            "content": ""
          },
          {
            "line": 94,
            "type": "added",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "module.exports = { createUser, getAllUsers, getUser, updateUser, deleteUser };"
          },
          {
            "line": 171,
            "type": "added",
            "content": "const migrateUsersFromPRsInternal = async () => {"
          },
          {
            "line": 172,
            "type": "added",
            "content": "    try {"
          },
          {
            "line": 173,
            "type": "added",
            "content": "        const prCollection = dbUser.bd().collection('pr_merge');"
          },
          {
            "line": 174,
            "type": "added",
            "content": "        const userCollection = dbUser.bd().collection('users');"
          },
          {
            "line": 175,
            "type": "added",
            "content": ""
          },
          {
            "line": 176,
            "type": "added",
            "content": "        const prs = await prCollection.find().toArray();"
          },
          {
            "line": 177,
            "type": "added",
            "content": "        let insertedCount = 0;"
          },
          {
            "line": 178,
            "type": "added",
            "content": ""
          },
          {
            "line": 179,
            "type": "added",
            "content": "        for (const pr of prs) {"
          },
          {
            "line": 180,
            "type": "added",
            "content": ""
          },
          {
            "line": 181,
            "type": "added",
            "content": "            const githubUser = pr.user;"
          },
          {
            "line": 182,
            "type": "added",
            "content": "            const prNumber = pr.number;"
          },
          {
            "line": 183,
            "type": "added",
            "content": ""
          },
          {
            "line": 184,
            "type": "added",
            "content": "            if (!githubUser) {"
          },
          {
            "line": 185,
            "type": "added",
            "content": "                console.log(`❌ PR #${prNumber} ignorée : aucun champ 'user'`);"
          },
          {
            "line": 186,
            "type": "added",
            "content": "                continue;"
          },
          {
            "line": 187,
            "type": "added",
            "content": "            }"
          },
          {
            "line": 188,
            "type": "added",
            "content": ""
          },
          {
            "line": 189,
            "type": "added",
            "content": "            const githubId = githubUser.githubId || githubUser.id;"
          },
          {
            "line": 190,
            "type": "added",
            "content": "            if (!githubId) {"
          },
          {
            "line": 191,
            "type": "added",
            "content": "                console.log(`❌ PR #${prNumber} ignorée : 'id' et 'githubId' manquants pour l'utilisateur ${githubUser.login || '[login inconnu]'}`);"
          },
          {
            "line": 192,
            "type": "added",
            "content": "                continue;"
          },
          {
            "line": 193,
            "type": "added",
            "content": "            }"
          },
          {
            "line": 194,
            "type": "added",
            "content": ""
          },
          {
            "line": 195,
            "type": "added",
            "content": ""
          },
          {
            "line": 196,
            "type": "added",
            "content": "            const exists = await userCollection.findOne({ githubId });"
          },
          {
            "line": 197,
            "type": "added",
            "content": "            if (exists) {"
          },
          {
            "line": 198,
            "type": "added",
            "content": "                console.log(`ℹ️ Utilisateur déjà présent : ${exists.login} (githubId: ${githubId})`);"
          },
          {
            "line": 199,
            "type": "added",
            "content": "                continue;"
          },
          {
            "line": 200,
            "type": "added",
            "content": "            }"
          },
          {
            "line": 201,
            "type": "added",
            "content": ""
          },
          {
            "line": 202,
            "type": "added",
            "content": "            const newUser = {"
          },
          {
            "line": 203,
            "type": "added",
            "content": "                githubId,"
          },
          {
            "line": 204,
            "type": "added",
            "content": "                login: githubUser.login || 'unknown',"
          },
          {
            "line": 205,
            "type": "added",
            "content": "                html_url: githubUser.html_url || githubUser.url || null,"
          },
          {
            "line": 206,
            "type": "added",
            "content": "                avatar_url: githubUser.avatar_url || null,"
          },
          {
            "line": 207,
            "type": "added",
            "content": "                gravatar_id: githubUser.gravatar_id || null,"
          },
          {
            "line": 208,
            "type": "added",
            "content": "                url: githubUser.url || null,"
          },
          {
            "line": 209,
            "type": "added",
            "content": "                followers_url: githubUser.followers_url || null,"
          },
          {
            "line": 210,
            "type": "added",
            "content": "                following_url: githubUser.following_url || null,"
          },
          {
            "line": 211,
            "type": "added",
            "content": "                gists_url: githubUser.gists_url || null,"
          },
          {
            "line": 212,
            "type": "added",
            "content": "                starred_url: githubUser.starred_url || null,"
          },
          {
            "line": 213,
            "type": "added",
            "content": "                subscriptions_url: githubUser.subscriptions_url || null,"
          },
          {
            "line": 214,
            "type": "added",
            "content": "                organizations_url: githubUser.organizations_url || null,"
          },
          {
            "line": 215,
            "type": "added",
            "content": "                repos_url: githubUser.repos_url || null,"
          },
          {
            "line": 216,
            "type": "added",
            "content": "                events_url: githubUser.events_url || null,"
          },
          {
            "line": 217,
            "type": "added",
            "content": "                received_events_url: githubUser.received_events_url || null,"
          },
          {
            "line": 218,
            "type": "added",
            "content": "                type: githubUser.type || null,"
          },
          {
            "line": 219,
            "type": "added",
            "content": "                site_admin: githubUser.site_admin ?? false"
          },
          {
            "line": 220,
            "type": "added",
            "content": "            };"
          },
          {
            "line": 221,
            "type": "added",
            "content": ""
          },
          {
            "line": 222,
            "type": "added",
            "content": "            await userCollection.insertOne(newUser);"
          },
          {
            "line": 223,
            "type": "added",
            "content": "            insertedCount++;"
          },
          {
            "line": 224,
            "type": "added",
            "content": "            console.log(`✅ Utilisateur inséré : ${newUser.login} (githubId: ${newUser.githubId})`);"
          },
          {
            "line": 225,
            "type": "added",
            "content": "        }"
          },
          {
            "line": 226,
            "type": "added",
            "content": ""
          },
          {
            "line": 227,
            "type": "added",
            "content": ""
          },
          {
            "line": 228,
            "type": "added",
            "content": "        return insertedCount;"
          },
          {
            "line": 229,
            "type": "added",
            "content": "    } catch (error) {"
          },
          {
            "line": 230,
            "type": "added",
            "content": "        console.error('❌ Erreur migration interne :', error.message);"
          },
          {
            "line": 231,
            "type": "added",
            "content": "        return 0;"
          },
          {
            "line": 232,
            "type": "added",
            "content": "    }"
          },
          {
            "line": 233,
            "type": "added",
            "content": ""
          },
          {
            "line": 234,
            "type": "added",
            "content": "};"
          },
          {
            "line": 235,
            "type": "added",
            "content": ""
          },
          {
            "line": 236,
            "type": "added",
            "content": "const migrateUsersFromPRs = async (req, res) => {"
          },
          {
            "line": 237,
            "type": "added",
            "content": "    try {"
          },
          {
            "line": 238,
            "type": "added",
            "content": "        const count = await migrateUsersFromPRsInternal();"
          },
          {
            "line": 239,
            "type": "added",
            "content": ""
          },
          {
            "line": 240,
            "type": "added",
            "content": "        res.status(200).json({ message: `${count} utilisateur(s) migré(s) depuis pr_merge.` });"
          },
          {
            "line": 241,
            "type": "added",
            "content": "    } catch (error) {"
          },
          {
            "line": 242,
            "type": "added",
            "content": "        console.error('❌ Erreur migration :', error.message);"
          },
          {
            "line": 243,
            "type": "added",
            "content": "        res.status(500).json({ error: 'Erreur lors de la migration.' });"
          },
          {
            "line": 244,
            "type": "added",
            "content": "    }"
          },
          {
            "line": 245,
            "type": "added",
            "content": "};"
          },
          {
            "line": 246,
            "type": "added",
            "content": "module.exports = { createUser, getAllUsers, getUser, updateUser, deleteUser, migrateUsersFromPRs, migrateUsersFromPRsInternal };"
          }
        ],
        "diff": []
      },
      {
        "filename": "jobs/githubCron.js",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/52bd0f70b97950442e334aa3eedf6709af8befb5/jobs%2FgithubCron.js",
        "modifiedLines": [
          {
            "line": 3,
            "type": "added",
            "content": "const { migrateUsersFromPRs } = require('../controller/user');"
          },
          {
            "line": 18,
            "type": "added",
            "content": ""
          },
          {
            "line": 19,
            "type": "added",
            "content": "            await migrateUsersFromPRs({"
          },
          {
            "line": 20,
            "type": "added",
            "content": "                body: {},"
          },
          {
            "line": 21,
            "type": "added",
            "content": "                query: {},"
          },
          {
            "line": 22,
            "type": "added",
            "content": "                params: {},"
          },
          {
            "line": 23,
            "type": "added",
            "content": "                status: () => ({ json: console.log })"
          },
          {
            "line": 24,
            "type": "added",
            "content": "            });"
          },
          {
            "line": 25,
            "type": "added",
            "content": "            console.log('👥 Migration des utilisateurs GitHub terminée.');"
          },
          {
            "line": 26,
            "type": "added",
            "content": ""
          }
        ],
        "diff": []
      },
      {
        "filename": "public/index.html",
        "status": "modified",
        "additions": 17,
        "deletions": 14,
        "changes": 31,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/52bd0f70b97950442e334aa3eedf6709af8befb5/public%2Findex.html",
        "modifiedLines": [
          {
            "line": null,
            "type": "removed",
            "content": "                <button onclick=\"syncGitHubUsers()\">Synchroniser les utilisateurs GitHub</button>"
          },
          {
            "line": 30,
            "type": "added",
            "content": "                <!-- <button onclick=\"syncGitHubUsers()\">Synchroniser les utilisateurs GitHub</button> -->"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                const identity = user.githubUrl && user.name"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    ? `<strong><a href= \"${user.githubUrl}\" target=\"_blank\">${user.name}</a></strong>`"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    : `<strong>${user.name}</strong>`;"
          },
          {
            "line": 112,
            "type": "added",
            "content": "                if (user.login) {"
          },
          {
            "line": 113,
            "type": "added",
            "content": "                    // Utilisateur GitHub"
          },
          {
            "line": 114,
            "type": "added",
            "content": "                    li.innerHTML = `<strong>${user.html_url}${user.login}</a></strong> <span style=\"color: #0366d6;\">[GitHub]</span> - ID GitHub: ${user.id}`;"
          },
          {
            "line": 115,
            "type": "added",
            "content": "                } else {"
          },
          {
            "line": 116,
            "type": "added",
            "content": "                    // Utilisateur local"
          },
          {
            "line": 117,
            "type": "added",
            "content": "                    li.innerHTML = `<strong>${user.name}</strong> [${user.email}] (${user.phone}) - ID: ${user._id}`;"
          },
          {
            "line": 118,
            "type": "added",
            "content": "                }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                li.innerHTML = `${identity} [${user.email}] (${user.phone}) - ID: ${user._id}`;"
          },
          {
            "line": null,
            "type": "removed",
            "content": "        async function syncGitHubUsers() {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            try {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                const res = await axios.post('http://localhost:3000/api/prs/sync-users');"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                alert(res.data.message);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                loadUsers(); // recharge la liste des utilisateurs"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            } catch (err) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                alert('Erreur : ' + (err.response?.data?.error || err.message));"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "        }"
          },
          {
            "line": 242,
            "type": "added",
            "content": "        // async function syncGitHubUsers() {"
          },
          {
            "line": 243,
            "type": "added",
            "content": "        //     try {"
          },
          {
            "line": 244,
            "type": "added",
            "content": "        //         const res = await axios.post('http://localhost:3000/api/prs/sync-users');"
          },
          {
            "line": 245,
            "type": "added",
            "content": "        //         alert(res.data.message);"
          },
          {
            "line": 246,
            "type": "added",
            "content": "        //         loadUsers(); // recharge la liste des utilisateurs"
          },
          {
            "line": 247,
            "type": "added",
            "content": "        //     } catch (err) {"
          },
          {
            "line": 248,
            "type": "added",
            "content": "        //         alert('Erreur : ' + (err.response?.data?.error || err.message));"
          },
          {
            "line": 249,
            "type": "added",
            "content": "        //     }"
          },
          {
            "line": 250,
            "type": "added",
            "content": "        // }"
          }
        ],
        "diff": []
      },
      {
        "filename": "route/pr.js",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/52bd0f70b97950442e334aa3eedf6709af8befb5/route%2Fpr.js",
        "modifiedLines": [
          {
            "line": null,
            "type": "removed",
            "content": "const { fetchAndStorePRs, getPRs } = require('../controller/pr');"
          },
          {
            "line": 5,
            "type": "added",
            "content": "const { fetchAndStorePRs, getPRs, updatePRs } = require('../controller/pr');"
          },
          {
            "line": null,
            "type": "removed",
            "content": "// console.log(typeof enrichPRsManuellement);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "// router.get('/enrich-prs', enrichPRsManuellement);"
          },
          {
            "line": 11,
            "type": "added",
            "content": "router.put('/update', updatePRs);"
          }
        ],
        "diff": []
      },
      {
        "filename": "route/user.js",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/52bd0f70b97950442e334aa3eedf6709af8befb5/route%2Fuser.js",
        "modifiedLines": [
          {
            "line": null,
            "type": "removed",
            "content": "const { createUser, getAllUsers, getUser, updateUser, deleteUser } = require('../controller/user');"
          },
          {
            "line": 4,
            "type": "added",
            "content": "const { createUser, getAllUsers, getUser, updateUser, deleteUser,migrateUsersFromPRs } = require('../controller/user');"
          },
          {
            "line": 17,
            "type": "added",
            "content": "router.route('/users/migrate-from-prs').post(migrateUsersFromPRs);"
          },
          {
            "line": 18,
            "type": "added",
            "content": ""
          },
          {
            "line": 19,
            "type": "added",
            "content": "const axios = require('axios');"
          }
        ],
        "diff": []
      },
      {
        "filename": "scripts/export-prs.js",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/52bd0f70b97950442e334aa3eedf6709af8befb5/scripts%2Fexport-prs.js",
        "modifiedLines": [
          {
            "line": null,
            "type": "removed",
            "content": "    "
          },
          {
            "line": 18,
            "type": "added",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "        "
          },
          {
            "line": 23,
            "type": "added",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "        "
          },
          {
            "line": 25,
            "type": "added",
            "content": ""
          },
          {
            "line": 31,
            "type": "added",
            "content": "        if (fs.existsSync(filePath)) {"
          },
          {
            "line": 32,
            "type": "added",
            "content": "            console.log(`📁 Le fichier ${fileName} existe déjà. Export ignoré.`);"
          },
          {
            "line": 33,
            "type": "added",
            "content": "            return;"
          },
          {
            "line": 34,
            "type": "added",
            "content": "        }"
          },
          {
            "line": 35,
            "type": "added",
            "content": ""
          }
        ],
        "diff": []
      },
      {
        "filename": "scripts/exports/export_prs_2025-10-03.json",
        "status": "added",
        "additions": 2368,
        "deletions": 0,
        "changes": 2368,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/52bd0f70b97950442e334aa3eedf6709af8befb5/scripts%2Fexports%2Fexport_prs_2025-10-03.json",
        "modifiedLines": []
      },
      {
        "filename": "server.js",
        "status": "modified",
        "additions": 91,
        "deletions": 15,
        "changes": 106,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/52bd0f70b97950442e334aa3eedf6709af8befb5/server.js",
        "modifiedLines": [
          {
            "line": 3,
            "type": "added",
            "content": "const fs = require('fs');"
          },
          {
            "line": 9,
            "type": "added",
            "content": "const dbUser = require('./bd/connect');"
          },
          {
            "line": null,
            "type": "removed",
            "content": "const { fetchAndStorePRsRaw, showDiffsForModifiedPRsFromYesterday, fetchModifiedPRsFromYesterday, fetchModifiedPRsFromYesterdayFromDB, enrichPRsManuellement } = require('./controller/pr');"
          },
          {
            "line": 13,
            "type": "added",
            "content": "const { fetchAndStorePRsRaw, showDiffsForModifiedPRsFromYesterday, fetchModifiedPRsFromYesterday, fetchModifiedPRsFromYesterdayFromDB, updatePRs } = require('./controller/pr');"
          },
          {
            "line": 14,
            "type": "added",
            "content": "const { migrateUsersFromPRs, migrateUsersFromPRsInternal } = require('./controller/user');"
          },
          {
            "line": 15,
            "type": "added",
            "content": "const { updatePRsWithUser } = require('./utils/update');"
          },
          {
            "line": 51,
            "type": "added",
            "content": "const importPRsFromFile = async () => {"
          },
          {
            "line": 52,
            "type": "added",
            "content": "    dbUser.connecter(uri, async (err) => {"
          },
          {
            "line": 53,
            "type": "added",
            "content": "        if (err) {"
          },
          {
            "line": 54,
            "type": "added",
            "content": "            console.error('❌ Erreur de connexion à MongoDB :', err.message);"
          },
          {
            "line": 55,
            "type": "added",
            "content": "            return;"
          },
          {
            "line": 56,
            "type": "added",
            "content": "        }"
          },
          {
            "line": 57,
            "type": "added",
            "content": ""
          },
          {
            "line": 58,
            "type": "added",
            "content": "        try {"
          },
          {
            "line": 59,
            "type": "added",
            "content": "            const filePath = path.join(__dirname, 'scripts', 'exports', 'export_prs_2025-10-03.json');"
          },
          {
            "line": 60,
            "type": "added",
            "content": ""
          },
          {
            "line": 61,
            "type": "added",
            "content": "            if (!fs.existsSync(filePath)) {"
          },
          {
            "line": 62,
            "type": "added",
            "content": "                console.log(`❌ Le fichier ${filePath} est introuvable.`);"
          },
          {
            "line": 63,
            "type": "added",
            "content": "                return;"
          },
          {
            "line": 64,
            "type": "added",
            "content": "            }"
          },
          {
            "line": 65,
            "type": "added",
            "content": ""
          },
          {
            "line": 66,
            "type": "added",
            "content": "            const rawData = fs.readFileSync(filePath, 'utf-8');"
          },
          {
            "line": 67,
            "type": "added",
            "content": "            const prs = JSON.parse(rawData);"
          },
          {
            "line": 68,
            "type": "added",
            "content": ""
          },
          {
            "line": 69,
            "type": "added",
            "content": ""
          },
          {
            "line": 70,
            "type": "added",
            "content": "            const prCollection = dbUser.bd().collection('pr_merge');"
          },
          {
            "line": 71,
            "type": "added",
            "content": "            let insertedCount = 0;"
          },
          {
            "line": 72,
            "type": "added",
            "content": ""
          },
          {
            "line": 73,
            "type": "added",
            "content": "            for (const pr of prs) {"
          },
          {
            "line": 74,
            "type": "added",
            "content": "                const exists = await prCollection.findOne({ number: pr.number });"
          },
          {
            "line": 75,
            "type": "added",
            "content": "                if (!exists) {"
          },
          {
            "line": 76,
            "type": "added",
            "content": "                    await prCollection.insertOne(pr);"
          },
          {
            "line": 77,
            "type": "added",
            "content": "                    insertedCount++;"
          },
          {
            "line": 78,
            "type": "added",
            "content": "                }"
          },
          {
            "line": 79,
            "type": "added",
            "content": "            }"
          },
          {
            "line": 80,
            "type": "added",
            "content": ""
          },
          {
            "line": 81,
            "type": "added",
            "content": "            console.log(`✅ ${insertedCount} PR(s) importée(s) depuis le fichier.`);"
          },
          {
            "line": 82,
            "type": "added",
            "content": "        } catch (error) {"
          },
          {
            "line": 83,
            "type": "added",
            "content": "            console.error('❌ Erreur lors de l’import :', error.message);"
          },
          {
            "line": 84,
            "type": "added",
            "content": "        }"
          },
          {
            "line": 85,
            "type": "added",
            "content": "    });"
          },
          {
            "line": 86,
            "type": "added",
            "content": "};"
          },
          {
            "line": 87,
            "type": "added",
            "content": ""
          },
          {
            "line": 88,
            "type": "added",
            "content": "importPRsFromFile();"
          },
          {
            "line": 89,
            "type": "added",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "                const message = await fetchAndStorePRsRaw(inputDate); // passe la date choisie"
          },
          {
            "line": 100,
            "type": "added",
            "content": "                const message = await fetchAndStorePRsRaw(inputDate);"
          },
          {
            "line": 105,
            "type": "added",
            "content": ""
          },
          {
            "line": 106,
            "type": "added",
            "content": "            try {"
          },
          {
            "line": 107,
            "type": "added",
            "content": "                console.log('🔧 Mise à jour des PRs avec les données utilisateur...');"
          },
          {
            "line": 108,
            "type": "added",
            "content": "                const updated = await updatePRsWithUser();"
          },
          {
            "line": 109,
            "type": "added",
            "content": "                console.log(`✅ ${updated} PR(s) enrichies avec les données utilisateur.`);"
          },
          {
            "line": 110,
            "type": "added",
            "content": "            } catch (err) {"
          },
          {
            "line": 111,
            "type": "added",
            "content": "                console.error('❌ Erreur lors de la mise à jour des PRs :', err.message);"
          },
          {
            "line": 112,
            "type": "added",
            "content": "            }"
          },
          {
            "line": 113,
            "type": "added",
            "content": ""
          },
          {
            "line": 114,
            "type": "added",
            "content": "            try {"
          },
          {
            "line": 115,
            "type": "added",
            "content": "                console.log('🚀 Migration des utilisateurs GitHub depuis pr_merge...');"
          },
          {
            "line": 116,
            "type": "added",
            "content": ""
          },
          {
            "line": 117,
            "type": "added",
            "content": "                const fakeReq = {"
          },
          {
            "line": 118,
            "type": "added",
            "content": "                    body: {},"
          },
          {
            "line": 119,
            "type": "added",
            "content": "                    query: {},"
          },
          {
            "line": 120,
            "type": "added",
            "content": "                    params: {}"
          },
          {
            "line": 121,
            "type": "added",
            "content": "                };"
          },
          {
            "line": 122,
            "type": "added",
            "content": ""
          },
          {
            "line": 123,
            "type": "added",
            "content": "                const fakeRes = {"
          },
          {
            "line": 124,
            "type": "added",
            "content": "                    status: function (code) {"
          },
          {
            "line": 125,
            "type": "added",
            "content": "                        return {"
          },
          {
            "line": 126,
            "type": "added",
            "content": "                            json: function (data) {"
          },
          {
            "line": 127,
            "type": "added",
            "content": "                                console.log(`📤 Response ${code}:`, data);"
          },
          {
            "line": 128,
            "type": "added",
            "content": "                            }"
          },
          {
            "line": 129,
            "type": "added",
            "content": "                        };"
          },
          {
            "line": 130,
            "type": "added",
            "content": "                    }"
          },
          {
            "line": 131,
            "type": "added",
            "content": "                };"
          },
          {
            "line": 132,
            "type": "added",
            "content": ""
          },
          {
            "line": 133,
            "type": "added",
            "content": "                await migrateUsersFromPRs(fakeReq, fakeRes);"
          },
          {
            "line": 134,
            "type": "added",
            "content": ""
          },
          {
            "line": 135,
            "type": "added",
            "content": "                console.log('✅ Migration terminée.');"
          },
          {
            "line": 136,
            "type": "added",
            "content": "            } catch (err) {"
          },
          {
            "line": 137,
            "type": "added",
            "content": "                console.error('❌ Erreur lors de la migration au démarrage :', err.message);"
          },
          {
            "line": 138,
            "type": "added",
            "content": "            }"
          },
          {
            "line": 139,
            "type": "added",
            "content": ""
          },
          {
            "line": 140,
            "type": "added",
            "content": "            try {"
          },
          {
            "line": 141,
            "type": "added",
            "content": "                console.log('🚀 Migration des utilisateurs GitHub depuis pr_merge...');"
          },
          {
            "line": 142,
            "type": "added",
            "content": "                const count = await migrateUsersFromPRsInternal();"
          },
          {
            "line": 143,
            "type": "added",
            "content": "                console.log(`✅ Migration terminée : ${count} utilisateur(s) inséré(s).`);"
          },
          {
            "line": 144,
            "type": "added",
            "content": "            } catch (err) {"
          },
          {
            "line": 145,
            "type": "added",
            "content": "                console.error('❌ Erreur lors de la migration au démarrage :', err.message);"
          },
          {
            "line": 146,
            "type": "added",
            "content": "            }"
          },
          {
            "line": 147,
            "type": "added",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    "
          },
          {
            "line": 186,
            "type": "added",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    const prs = await fetchModifiedPRsFromYesterday(); "
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    await showDiffsForModifiedPRsFromYesterday(prs);   "
          },
          {
            "line": 196,
            "type": "added",
            "content": "                    const prs = await fetchModifiedPRsFromYesterday();"
          },
          {
            "line": 197,
            "type": "added",
            "content": "                    await showDiffsForModifiedPRsFromYesterday(prs);"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "                // Appel unique au démarrage"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                // try {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                //     await enrichPRsManuellement();"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                //     console.log('✅ Enrichissement des PRs terminé au démarrage');"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                // } catch (err) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                //     console.error('❌ Erreur lors de l’enrichissement au démarrage :', err.message);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                // }"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          }
        ],
        "diff": []
      },
      {
        "filename": "utils/update.js",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/52bd0f70b97950442e334aa3eedf6709af8befb5/utils%2Fupdate.js",
        "modifiedLines": [
          {
            "line": 1,
            "type": "added",
            "content": "const dbUser = require('../bd/connect');"
          },
          {
            "line": 2,
            "type": "added",
            "content": ""
          },
          {
            "line": 3,
            "type": "added",
            "content": "const updatePRsWithUser = async () => {"
          },
          {
            "line": 4,
            "type": "added",
            "content": "    try {"
          },
          {
            "line": 5,
            "type": "added",
            "content": "        const prCollection = dbUser.bd().collection('pr_merge');"
          },
          {
            "line": 6,
            "type": "added",
            "content": "        const prs = await prCollection.find().toArray();"
          },
          {
            "line": 7,
            "type": "added",
            "content": "        let updatedCount = 0;"
          },
          {
            "line": 8,
            "type": "added",
            "content": ""
          },
          {
            "line": 9,
            "type": "added",
            "content": "        for (const pr of prs) {"
          },
          {
            "line": 10,
            "type": "added",
            "content": "            // Si le champ user est déjà présent et contient un id, on ignore"
          },
          {
            "line": 11,
            "type": "added",
            "content": "            if (pr.user && (pr.user.id || pr.user.githubId)) continue;"
          },
          {
            "line": 12,
            "type": "added",
            "content": ""
          },
          {
            "line": 13,
            "type": "added",
            "content": "            // Vérifie si on peut récupérer l'utilisateur depuis un autre champ"
          },
          {
            "line": 14,
            "type": "added",
            "content": "            const githubUser = pr.user || pr?.pull_request?.user || pr?.head?.user || null;"
          },
          {
            "line": 15,
            "type": "added",
            "content": ""
          },
          {
            "line": 16,
            "type": "added",
            "content": "            if (!githubUser || !githubUser.id) {"
          },
          {
            "line": 17,
            "type": "added",
            "content": "                console.warn(`⚠️ PR #${pr.number} ignorée : utilisateur GitHub introuvable`);"
          },
          {
            "line": 18,
            "type": "added",
            "content": "                continue;"
          },
          {
            "line": 19,
            "type": "added",
            "content": "            }"
          },
          {
            "line": 20,
            "type": "added",
            "content": ""
          },
          {
            "line": 21,
            "type": "added",
            "content": "            // Mise à jour de la PR avec les infos utilisateur"
          },
          {
            "line": 22,
            "type": "added",
            "content": "            await prCollection.updateOne("
          },
          {
            "line": 23,
            "type": "added",
            "content": "                { _id: pr._id },"
          },
          {
            "line": 24,
            "type": "added",
            "content": "                {"
          },
          {
            "line": 25,
            "type": "added",
            "content": "                    $set: {"
          },
          {
            "line": 26,
            "type": "added",
            "content": "                        user: {"
          },
          {
            "line": 27,
            "type": "added",
            "content": "                            id: githubUser.id,"
          },
          {
            "line": 28,
            "type": "added",
            "content": "                            login: githubUser.login,"
          },
          {
            "line": 29,
            "type": "added",
            "content": "                            html_url: githubUser.html_url,"
          },
          {
            "line": 30,
            "type": "added",
            "content": "                            avatar_url: githubUser.avatar_url,"
          },
          {
            "line": 31,
            "type": "added",
            "content": "                            gravatar_id: githubUser.gravatar_id,"
          },
          {
            "line": 32,
            "type": "added",
            "content": "                            url: githubUser.url,"
          },
          {
            "line": 33,
            "type": "added",
            "content": "                            followers_url: githubUser.followers_url,"
          },
          {
            "line": 34,
            "type": "added",
            "content": "                            following_url: githubUser.following_url,"
          },
          {
            "line": 35,
            "type": "added",
            "content": "                            gists_url: githubUser.gists_url,"
          },
          {
            "line": 36,
            "type": "added",
            "content": "                            starred_url: githubUser.starred_url,"
          },
          {
            "line": 37,
            "type": "added",
            "content": "                            subscriptions_url: githubUser.subscriptions_url,"
          },
          {
            "line": 38,
            "type": "added",
            "content": "                            organizations_url: githubUser.organizations_url,"
          },
          {
            "line": 39,
            "type": "added",
            "content": "                            repos_url: githubUser.repos_url,"
          },
          {
            "line": 40,
            "type": "added",
            "content": "                            events_url: githubUser.events_url,"
          },
          {
            "line": 41,
            "type": "added",
            "content": "                            received_events_url: githubUser.received_events_url,"
          },
          {
            "line": 42,
            "type": "added",
            "content": "                            type: githubUser.type,"
          },
          {
            "line": 43,
            "type": "added",
            "content": "                            site_admin: githubUser.site_admin"
          },
          {
            "line": 44,
            "type": "added",
            "content": "                        }"
          },
          {
            "line": 45,
            "type": "added",
            "content": "                    }"
          },
          {
            "line": 46,
            "type": "added",
            "content": "                }"
          },
          {
            "line": 47,
            "type": "added",
            "content": "            );"
          },
          {
            "line": 48,
            "type": "added",
            "content": ""
          },
          {
            "line": 49,
            "type": "added",
            "content": "            updatedCount++;"
          },
          {
            "line": 50,
            "type": "added",
            "content": "            console.log(`🔄 PR #${pr.number} mise à jour avec l'utilisateur ${githubUser.login}`);"
          },
          {
            "line": 51,
            "type": "added",
            "content": "        }"
          },
          {
            "line": 52,
            "type": "added",
            "content": ""
          },
          {
            "line": 53,
            "type": "added",
            "content": "        console.log(`✅ ${updatedCount} PR(s) mises à jour avec les données utilisateur.`);"
          },
          {
            "line": 54,
            "type": "added",
            "content": "        return updatedCount;"
          },
          {
            "line": 55,
            "type": "added",
            "content": "    } catch (error) {"
          },
          {
            "line": 56,
            "type": "added",
            "content": "        console.error('❌ Erreur lors de la mise à jour des PRs :', error.message);"
          },
          {
            "line": 57,
            "type": "added",
            "content": "        return 0;"
          },
          {
            "line": 58,
            "type": "added",
            "content": "    }"
          },
          {
            "line": 59,
            "type": "added",
            "content": "};"
          },
          {
            "line": 60,
            "type": "added",
            "content": ""
          },
          {
            "line": 61,
            "type": "added",
            "content": "module.exports = { updatePRsWithUser };"
          }
        ]
      }
    ],
    "id": 2885032001,
    "repo": "projet_1_back",
    "state": "closed",
    "title": "modification des users github et des collections dans mongodb.",
    "updated_at": "2025-10-03T13:46:39.000Z",
    "user": {
      "githubId": 233725179,
      "login": "fournest85",
      "html_url": "https://github.com/fournest85",
      "avatar_url": "https://avatars.githubusercontent.com/u/233725179?v=4",
      "type": "User",
      "site_admin": false
    }
  },
  {
    "_id": "68e36a9c695e0252abb687a3",
    "number": 14,
    "created_at": "2025-10-03T15:29:32.000Z",
    "date": "2025-10-09T12:39:15.906Z",
    "files": [
      {
        "filename": "controller/pr.js",
        "status": "modified",
        "additions": 21,
        "deletions": 3,
        "changes": 24,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/467a62b5ba78b17d5e685e90058e04621e902d93/controller%2Fpr.js",
        "modifiedLines": [
          {
            "line": null,
            "type": "removed",
            "content": "const updatePRs = async (req, res) => {"
          },
          {
            "line": 378,
            "type": "added",
            "content": ""
          },
          {
            "line": 379,
            "type": "added",
            "content": "const updatePRs = async (req = null, res = null) => {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "        res.status(200).json({ message: `${count} PR(s) mises à jour avec les données utilisateur.` });"
          },
          {
            "line": 382,
            "type": "added",
            "content": ""
          },
          {
            "line": 383,
            "type": "added",
            "content": "        const message = `${count} PR(s) mises à jour avec les données utilisateur.`;"
          },
          {
            "line": 384,
            "type": "added",
            "content": ""
          },
          {
            "line": 385,
            "type": "added",
            "content": "        // Si res est fourni (appel via route Express)"
          },
          {
            "line": 386,
            "type": "added",
            "content": "        if (res && typeof res.status === 'function') {"
          },
          {
            "line": 387,
            "type": "added",
            "content": "            return res.status(200).json({ message });"
          },
          {
            "line": 388,
            "type": "added",
            "content": "        }"
          },
          {
            "line": 389,
            "type": "added",
            "content": ""
          },
          {
            "line": 390,
            "type": "added",
            "content": "        // Sinon, appel interne (ex: server.js)"
          },
          {
            "line": 391,
            "type": "added",
            "content": "        console.log(`✅ ${message}`);"
          },
          {
            "line": 392,
            "type": "added",
            "content": "        return count;"
          },
          {
            "line": 394,
            "type": "added",
            "content": "        const errorMessage = 'Erreur lors de la mise à jour des PRs.';"
          },
          {
            "line": null,
            "type": "removed",
            "content": "        res.status(500).json({ error: 'Erreur lors de la mise à jour des PRs.' });"
          },
          {
            "line": 396,
            "type": "added",
            "content": ""
          },
          {
            "line": 397,
            "type": "added",
            "content": "        if (res && typeof res.status === 'function') {"
          },
          {
            "line": 398,
            "type": "added",
            "content": "            return res.status(500).json({ error: errorMessage });"
          },
          {
            "line": 399,
            "type": "added",
            "content": "        }"
          },
          {
            "line": 400,
            "type": "added",
            "content": ""
          },
          {
            "line": 401,
            "type": "added",
            "content": "        return 0;"
          },
          {
            "line": 407,
            "type": "added",
            "content": ""
          }
        ],
        "diff": []
      },
      {
        "filename": "controller/user.js",
        "status": "modified",
        "additions": 23,
        "deletions": 14,
        "changes": 37,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/467a62b5ba78b17d5e685e90058e04621e902d93/controller%2Fuser.js",
        "modifiedLines": [
          {
            "line": null,
            "type": "removed",
            "content": "                id: 1,"
          },
          {
            "line": 53,
            "type": "added",
            "content": "                githubId: 1,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    id: user.id,"
          },
          {
            "line": 67,
            "type": "added",
            "content": "                    githubId: user.githubId,"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "            const githubUser = pr.user;"
          },
          {
            "line": 180,
            "type": "added",
            "content": "            const githubUser = pr.user;"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            if (!githubId) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                console.log(`❌ PR #${prNumber} ignorée : 'id' et 'githubId' manquants pour l'utilisateur ${githubUser.login || '[login inconnu]'}`);"
          },
          {
            "line": 188,
            "type": "added",
            "content": "            const login = githubUser.login;"
          },
          {
            "line": 189,
            "type": "added",
            "content": ""
          },
          {
            "line": 190,
            "type": "added",
            "content": "            if (!githubId || !login || login === 'unknown') {"
          },
          {
            "line": 191,
            "type": "added",
            "content": "                console.log(`⚠️ PR #${prNumber} ignorée : utilisateur GitHub invalide (id: ${githubId}, login: ${login})`);"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "                login: githubUser.login || 'unknown',"
          },
          {
            "line": 203,
            "type": "added",
            "content": "                login,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                type: githubUser.type || null,"
          },
          {
            "line": 217,
            "type": "added",
            "content": "                type: githubUser.type || 'User',"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "const migrateUsersFromPRs = async (req, res) => {"
          },
          {
            "line": 233,
            "type": "added",
            "content": "const migrateUsersFromPRs = async (req = null, res = null) => {"
          },
          {
            "line": 236,
            "type": "added",
            "content": "        const message = `${count} utilisateur(s) migré(s) depuis pr_merge.`;"
          },
          {
            "line": null,
            "type": "removed",
            "content": "        res.status(200).json({ message: `${count} utilisateur(s) migré(s) depuis pr_merge.` });"
          },
          {
            "line": 238,
            "type": "added",
            "content": "        if (res && typeof res.status === 'function') {"
          },
          {
            "line": 239,
            "type": "added",
            "content": "            return res.status(200).json({ message });"
          },
          {
            "line": 240,
            "type": "added",
            "content": "        }"
          },
          {
            "line": 241,
            "type": "added",
            "content": ""
          },
          {
            "line": 242,
            "type": "added",
            "content": "        console.log(`✅ ${message}`);"
          },
          {
            "line": 243,
            "type": "added",
            "content": "        return count;"
          },
          {
            "line": null,
            "type": "removed",
            "content": "        res.status(500).json({ error: 'Erreur lors de la migration.' });"
          },
          {
            "line": 246,
            "type": "added",
            "content": ""
          },
          {
            "line": 247,
            "type": "added",
            "content": "        if (res && typeof res.status === 'function') {"
          },
          {
            "line": 248,
            "type": "added",
            "content": "            return res.status(500).json({ error: 'Erreur lors de la migration.' });"
          },
          {
            "line": 249,
            "type": "added",
            "content": "        }"
          },
          {
            "line": 250,
            "type": "added",
            "content": ""
          },
          {
            "line": 251,
            "type": "added",
            "content": "        return 0;"
          }
        ],
        "diff": []
      },
      {
        "filename": "model/user.js",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/467a62b5ba78b17d5e685e90058e04621e902d93/model%2Fuser.js",
        "modifiedLines": [
          {
            "line": 7,
            "type": "added",
            "content": ""
          },
          {
            "line": 8,
            "type": "added",
            "content": "        // Renommer le champ 'id' de GitHub en 'githubId'"
          },
          {
            "line": 9,
            "type": "added",
            "content": "        if (githubData.id) {"
          },
          {
            "line": 10,
            "type": "added",
            "content": "            this.githubId = githubData.id;"
          },
          {
            "line": 11,
            "type": "added",
            "content": "        }"
          },
          {
            "line": 12,
            "type": "added",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "            id: this.id,"
          },
          {
            "line": 20,
            "type": "added",
            "content": "            githubId: this.githubId,"
          }
        ],
        "diff": []
      },
      {
        "filename": "public/index.html",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/467a62b5ba78b17d5e685e90058e04621e902d93/public%2Findex.html",
        "modifiedLines": [
          {
            "line": 97,
            "type": "added",
            "content": "                console.log('Données reçues du backend :', allUsers);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    li.innerHTML = `<strong>${user.html_url}${user.login}</a></strong> <span style=\"color: #0366d6;\">[GitHub]</span> - ID GitHub: ${user.id}`;"
          },
          {
            "line": 115,
            "type": "added",
            "content": "                    li.innerHTML = `<a>${user.html_url}</a> <strong>${user.login}</strong> <span style=\"color: #0366d6;\">[GitHub]</span> - ID GitHub: ${user.githubId}`;"
          }
        ],
        "diff": []
      },
      {
        "filename": "server.js",
        "status": "modified",
        "additions": 4,
        "deletions": 67,
        "changes": 71,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/467a62b5ba78b17d5e685e90058e04621e902d93/server.js",
        "modifiedLines": [
          {
            "line": null,
            "type": "removed",
            "content": "const fs = require('fs');"
          },
          {
            "line": 3,
            "type": "added",
            "content": "// const fs = require('fs');"
          },
          {
            "line": null,
            "type": "removed",
            "content": "const dbUser = require('./bd/connect');"
          },
          {
            "line": 9,
            "type": "added",
            "content": "// const dbUser = require('./bd/connect');"
          },
          {
            "line": null,
            "type": "removed",
            "content": "const { updatePRsWithUser } = require('./utils/update');"
          },
          {
            "line": 15,
            "type": "added",
            "content": "// const { updatePRsWithUser } = require('./utils/update');"
          },
          {
            "line": null,
            "type": "removed",
            "content": "const importPRsFromFile = async () => {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "    dbUser.connecter(uri, async (err) => {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "        if (err) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            console.error('❌ Erreur de connexion à MongoDB :', err.message);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            return;"
          },
          {
            "line": null,
            "type": "removed",
            "content": "        }"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "        try {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            const filePath = path.join(__dirname, 'scripts', 'exports', 'export_prs_2025-10-03.json');"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "            if (!fs.existsSync(filePath)) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                console.log(`❌ Le fichier ${filePath} est introuvable.`);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                return;"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            }"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "            const rawData = fs.readFileSync(filePath, 'utf-8');"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            const prs = JSON.parse(rawData);"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "            const prCollection = dbUser.bd().collection('pr_merge');"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            let insertedCount = 0;"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "            for (const pr of prs) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                const exists = await prCollection.findOne({ number: pr.number });"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                if (!exists) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    await prCollection.insertOne(pr);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    insertedCount++;"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            }"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "            console.log(`✅ ${insertedCount} PR(s) importée(s) depuis le fichier.`);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "        } catch (error) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            console.error('❌ Erreur lors de l’import :', error.message);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "        }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "    });"
          },
          {
            "line": null,
            "type": "removed",
            "content": "};"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "importPRsFromFile();"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                const updated = await updatePRsWithUser();"
          },
          {
            "line": 70,
            "type": "added",
            "content": "                const updated = await updatePRs();"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            try {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                console.log('🚀 Migration des utilisateurs GitHub depuis pr_merge...');"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "                const fakeReq = {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    body: {},"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    query: {},"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    params: {}"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                };"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "                const fakeRes = {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    status: function (code) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                        return {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            json: function (data) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                                console.log(`📤 Response ${code}:`, data);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                        };"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                };"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "                await migrateUsersFromPRs(fakeReq, fakeRes);"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "                console.log('✅ Migration terminée.');"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            } catch (err) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                console.error('❌ Erreur lors de la migration au démarrage :', err.message);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            }"
          }
        ],
        "diff": []
      },
      {
        "filename": "utils/update.js",
        "status": "modified",
        "additions": 37,
        "deletions": 38,
        "changes": 75,
        "raw_url": "https://github.com/fournest85/projet_1_back/raw/467a62b5ba78b17d5e685e90058e04621e902d93/utils%2Fupdate.js",
        "modifiedLines": [
          {
            "line": null,
            "type": "removed",
            "content": "            // Si le champ user est déjà présent et contient un id, on ignore"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            if (pr.user && (pr.user.id || pr.user.githubId)) continue;"
          },
          {
            "line": 10,
            "type": "added",
            "content": "            const existingUser = pr.user;"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            // Vérifie si on peut récupérer l'utilisateur depuis un autre champ"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            const githubUser = pr.user || pr?.pull_request?.user || pr?.head?.user || null;"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "            if (!githubUser || !githubUser.id) {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                console.warn(`⚠️ PR #${pr.number} ignorée : utilisateur GitHub introuvable`);"
          },
          {
            "line": 12,
            "type": "added",
            "content": "            // Ignore si déjà enrichi avec login et html_url"
          },
          {
            "line": 13,
            "type": "added",
            "content": "            if (existingUser && existingUser.login && existingUser.html_url) {"
          },
          {
            "line": 14,
            "type": "added",
            "content": "                console.log(`ℹ️ PR #${pr.number} déjà enrichie avec ${existingUser.login}, ignorée.`);"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            // Mise à jour de la PR avec les infos utilisateur"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            await prCollection.updateOne("
          },
          {
            "line": null,
            "type": "removed",
            "content": "                { _id: pr._id },"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    $set: {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                        user: {"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            id: githubUser.id,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            login: githubUser.login,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            html_url: githubUser.html_url,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            avatar_url: githubUser.avatar_url,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            gravatar_id: githubUser.gravatar_id,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            url: githubUser.url,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            followers_url: githubUser.followers_url,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            following_url: githubUser.following_url,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            gists_url: githubUser.gists_url,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            starred_url: githubUser.starred_url,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            subscriptions_url: githubUser.subscriptions_url,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            organizations_url: githubUser.organizations_url,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            repos_url: githubUser.repos_url,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            events_url: githubUser.events_url,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            received_events_url: githubUser.received_events_url,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            type: githubUser.type,"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                            site_admin: githubUser.site_admin"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                        }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                    }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "                }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            );"
          },
          {
            "line": null,
            "type": "removed",
            "content": ""
          },
          {
            "line": null,
            "type": "removed",
            "content": "            updatedCount++;"
          },
          {
            "line": null,
            "type": "removed",
            "content": "            console.log(`🔄 PR #${pr.number} mise à jour avec l'utilisateur ${githubUser.login}`);"
          },
          {
            "line": 18,
            "type": "added",
            "content": "            // Utilise les données existantes si githubId et githubUrl sont présents"
          },
          {
            "line": 19,
            "type": "added",
            "content": "            if (existingUser && existingUser.githubId && existingUser.githubUrl) {"
          },
          {
            "line": 20,
            "type": "added",
            "content": "                const enrichedUser = {"
          },
          {
            "line": 21,
            "type": "added",
            "content": "                    id: existingUser.githubId,"
          },
          {
            "line": 22,
            "type": "added",
            "content": "                    login: existingUser.githubUrl.split('/').pop(), // extrait le login depuis l'URL"
          },
          {
            "line": 23,
            "type": "added",
            "content": "                    html_url: existingUser.githubUrl,"
          },
          {
            "line": 24,
            "type": "added",
            "content": "                    avatar_url: null,"
          },
          {
            "line": 25,
            "type": "added",
            "content": "                    gravatar_id: null,"
          },
          {
            "line": 26,
            "type": "added",
            "content": "                    url: existingUser.githubUrl,"
          },
          {
            "line": 27,
            "type": "added",
            "content": "                    followers_url: null,"
          },
          {
            "line": 28,
            "type": "added",
            "content": "                    following_url: null,"
          },
          {
            "line": 29,
            "type": "added",
            "content": "                    gists_url: null,"
          },
          {
            "line": 30,
            "type": "added",
            "content": "                    starred_url: null,"
          },
          {
            "line": 31,
            "type": "added",
            "content": "                    subscriptions_url: null,"
          },
          {
            "line": 32,
            "type": "added",
            "content": "                    organizations_url: null,"
          },
          {
            "line": 33,
            "type": "added",
            "content": "                    repos_url: null,"
          },
          {
            "line": 34,
            "type": "added",
            "content": "                    events_url: null,"
          },
          {
            "line": 35,
            "type": "added",
            "content": "                    received_events_url: null,"
          },
          {
            "line": 36,
            "type": "added",
            "content": "                    type: 'User',"
          },
          {
            "line": 37,
            "type": "added",
            "content": "                    site_admin: false"
          },
          {
            "line": 38,
            "type": "added",
            "content": "                };"
          },
          {
            "line": 39,
            "type": "added",
            "content": ""
          },
          {
            "line": 40,
            "type": "added",
            "content": "                await prCollection.updateOne("
          },
          {
            "line": 41,
            "type": "added",
            "content": "                    { _id: pr._id },"
          },
          {
            "line": 42,
            "type": "added",
            "content": "                    { $set: { user: enrichedUser } }"
          },
          {
            "line": 43,
            "type": "added",
            "content": "                );"
          },
          {
            "line": 44,
            "type": "added",
            "content": ""
          },
          {
            "line": 45,
            "type": "added",
            "content": "                updatedCount++;"
          },
          {
            "line": 46,
            "type": "added",
            "content": "                console.log(`🔄 PR #${pr.number} mise à jour avec l'utilisateur ${enrichedUser.login}`);"
          },
          {
            "line": 47,
            "type": "added",
            "content": "            } else {"
          },
          {
            "line": 48,
            "type": "added",
            "content": "                console.warn(`⚠️ PR #${pr.number} ignorée : utilisateur GitHub introuvable`);"
          },
          {
            "line": 49,
            "type": "added",
            "content": "            }"
          },
          {
            "line": null,
            "type": "removed",
            "content": "module.exports = { updatePRsWithUser };"
          },
          {
            "line": 61,
            "type": "added",
            "content": "module.exports = { updatePRsWithUser };"
          }
        ],
        "diff": []
      }
    ],
    "id": 2885362179,
    "repo": "projet_1_back",
    "state": "closed",
    "title": "mise à jour pour affichage correct et correction de certains bugs.",
    "updated_at": "2025-10-03T15:29:46.000Z",
    "user": {
      "githubId": 233725179,
      "login": "fournest85",
      "html_url": "https://github.com/fournest85",
      "avatar_url": "https://avatars.githubusercontent.com/u/233725179?v=4",
      "type": "User",
      "site_admin": false
    }
  }
]